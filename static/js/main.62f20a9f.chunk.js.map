{"version":3,"sources":["park.module.css","logo.svg","components/panel/ExpansionPanel.js","Park.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","park","__webpack_require__","p","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","_ref","alerts","desc","visitors","grounds","articles","events","news","classes","alertsEmpty","length","groundsEmpty","centersEmpty","articlesEmpty","lotsOfArticles","eventsEmpty","react_default","a","createElement","className","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","Typography","ExpansionPanelDetails","align","map","v","description","g","eve","art","href","url","target","title","n","API_KEY","Park","location","parkCode","_useState","useState","_useState2","Object","slicedToArray","setVisitors","_useState3","_useState4","setGrounds","_useState5","_useState6","setAlerts","_useState7","_useState8","setArticles","_useState9","_useState10","setEvents","_useState11","_useState12","setNews","getArticleData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","sent","json","stop","apply","this","arguments","getVisitorData","_ref3","_callee2","_context2","getAlertData","_ref4","_callee3","_context3","getGroundsData","_ref5","_callee4","_context4","getEventsData","_ref6","_callee5","_context5","getNewsData","_ref7","_callee6","_context6","useEffect","style","onClick","e","preventDefault","window","open","focus","handleClick","panel_ExpansionPanel","App","parks","setParks","search","setSearch","query","setQuery","getData","onSubmit","type","placeholder","value","onChange","src_Park","fullName","states","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62f20a9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"park\":\"park_park__16yGK\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction SimpleExpansionPanel({ alerts, desc, visitors, grounds, articles, events, news }) {\n  const classes = useStyles();\n  var alertsEmpty = alerts.length === 0;\n  var groundsEmpty = grounds.length === 0;\n  var centersEmpty = visitors.length === 0;\n  var articlesEmpty = articles.length === 0;\n  var lotsOfArticles = articles.length > 10;\n  var eventsEmpty = events.length === 0;\n  var newsEmpty = news.length === 0;\n\n\n  return (\n    <div className={classes.root}>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Overview</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <p align=\"left\">{desc}</p>\n\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>While You're There</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <p align=\"left\"><strong>Visitor Centers:</strong></p>\n            {visitors.map(v => (\n              <p align=\"left\"><li>{v.description}</li></p>\n            ))}\n            <p>{(centersEmpty ? \"There are no visitor centers :(.\" : \"\")}</p>\n            <hr />\n            <p align=\"left\"><strong>Nearby Campgrounds:</strong></p>\n            {grounds.map(g => (\n              <p><li>{g.description}</li></p>\n            ))}\n            <p align=\"left\">{(groundsEmpty ? \"There are no nearby campgrounds :(.\" : \"\")}</p>\n            \n            <hr />\n\n            <p align=\"left\"><strong>Events:</strong></p>\n\n            {events.map(eve => (\n              <p align=\"left\"> <li>{eve.description}</li> </p>\n            ))}\n            <p align=\"left\">{(eventsEmpty ? \"There are no events :(.\" : \"\")}</p>\n\n\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      \n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Things to Know</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n\n            <p align=\"left\"><strong>Alerts:</strong></p>\n            {alerts.map(a => (\n              <p align=\"left\"><li>{a.description}</li></p>\n            ))}\n\n            <p align=\"left\">{(alertsEmpty ? \"There are no alerts!\" : \"\")}</p>\n\n            <hr />\n\n            <p align=\"left\"><strong>Articles: {(lotsOfArticles ? \" (Top 5)\" : \"\")}</strong></p>\n\n            {articles.map(art => (\n              <p align=\"left\"><li><a href={art.url} target=\"_blank\">{art.title}</a></li></p>\n            ))}\n\n            <p align=\"left\">{(articlesEmpty ? \"There are no articles :(.\" : \"\")}</p>\n\n\n            <hr />\n\n\n\n            <p align=\"left\"><strong>News:</strong></p>\n\n            {news.map(n => (\n              <p align=\"left\"><li><a href={n.url} target=\"_blank\">{n.title}</a></li></p>))}\n            <p align=\"left\">{(eventsEmpty ? \"There is no news :(.\" : \"\")}</p>\n\n\n\n\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Learn More</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Nothing yet\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n\n\n\n    </div>\n  );\n}\n\nexport default SimpleExpansionPanel;","import React, { useEffect, useState } from 'react';\nimport style from './park.module.css';\nimport Panel from './components/panel/ExpansionPanel';\n\nconst API_KEY = 'NbNl7f8G2SaGHJWLhTRShe9uw1GHgJetnXsxn2SA';\n\nconst Park = ({ title, location, parkCode, desc }) => {\n\n    const [visitors, setVisitors] = useState([]);\n    const [grounds, setGrounds] = useState([]);\n    const [alerts, setAlerts] = useState([]);\n    const [articles, setArticles] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [news, setNews] = useState([]);\n\n\n\n    const getArticleData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/articles?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        const data = await response.json();\n        setArticles(data.data);\n    }\n\n    const getVisitorData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/visitorcenters?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        const data = await response.json();\n        setVisitors(data.data);\n    }\n\n    const getAlertData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/alerts?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        const data = await response.json();\n        setAlerts(data.data);\n    }\n\n    const getGroundsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/campgrounds?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        const data = await response.json();\n        setGrounds(data.data);\n    }\n\n    const getEventsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/events?parkCode=${parkCode}&limit=2&api_key=${API_KEY}`);\n        const data = await response.json();\n        setEvents(data.data);\n    }\n\n    const getNewsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/news?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        const data = await response.json();\n        setNews(data.data);\n    }\n\n\n\n    // const update = e => {\n    //     getVisitorData();\n    //     getGroundsData();\n    //   }\n    \n\n    useEffect(() => {\n        getVisitorData();\n        getGroundsData();\n        getAlertData();\n        getArticleData();\n        getEventsData();\n        getNewsData();\n    }, [])\n\n    return (\n\n        <div className={style.park}>\n\n            <h2>{title}</h2>\n            <p>{location} <br></br> Park code: {parkCode} </p>\n            <button onClick={(e) => {\n                handleClick(e, parkCode)\n            }} href=\"#\">More info</button>\n            <p></p>\n           \n            <Panel\n                desc={desc}\n                visitors={visitors}\n                grounds={grounds}\n                alerts={alerts}\n                articles={articles}\n                events={events}\n                news={news}\n            //Alerts, articles, events, news releases\n            />\n        </div>\n    );\n}\n\nfunction handleClick(e, parkCode) {\n    e.preventDefault();\n    var win = window.open(`https://www.nps.gov/${parkCode}/index.htm`, '_blank');\n    win.focus();\n\n}\n\nexport default Park;\n","import React, { useEffect, useState } from 'react';\nimport Park from './Park';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header/Header'\n\nfunction App() {\n\n  const API_KEY = 'NbNl7f8G2SaGHJWLhTRShe9uw1GHgJetnXsxn2SA';\n  const [parks, setParks] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('NULL');\n\n  useEffect(() => {\n    getData();\n  }, [query])\n\n  \n  const getData = async () => {\n    const response = await fetch(`https://developer.nps.gov/api/v1/parks?limit=10&q=${query}&api_key=${API_KEY}`);\n    const data = await response.json();\n    setParks(data.data);\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n \n\n  return (\n\n    <div className=\"App\">\n\n      {/* <Header /> */}\n\n      <h1>Welcome to the National Park Service Kiosk </h1>\n\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" placeholder=\"Enter a park...\" value={search} onChange={updateSearch} />\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n\n      <div className=\"parks\">\n        {parks.map(park => (\n          <Park\n            title={park.fullName}\n            location={park.states}\n            parkCode={park.parkCode}\n            desc={park.description}\n          />\n        ))}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}