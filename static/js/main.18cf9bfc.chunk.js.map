{"version":3,"sources":["components/panel/ExpansionPanel.js","components/map/GoogleMapsContainer.js","components/park/Park.js","components/header/Header.js","App.js","serviceWorker.js","index.js","components/park/park.module.css","components/panel/panel.module.css"],"names":["useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","_ref","alerts","desc","visitors","grounds","articles","events","news","lessons","places","people","classes","alertsEmpty","length","groundsEmpty","centersEmpty","articlesEmpty","lotsOfArticles","eventsEmpty","newsEmpty","lessonsEmpty","placesEmpty","peopleEmpty","react_default","a","createElement","className","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","Typography","ExpansionPanelDetails","style","infoPanel","align","therePanel","map","v","description","g","eve","art","href","url","target","title","n","l","questionobjective","place","listingdescription","person","GoogleMapsContainer","props","lat","long","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClick","state","latV","longV","bind","assertThisInitialized","dist","item","xs","height","marginLeft","marginTop","marginRight","google","onClick","zoom","initialCenter","lng","position","name","visible","Paper","variant","component","React","Component","GoogleApiWrapper","api","API_KEY","Park","parkCode","location","states","dir","latLong","_useState","useState","_useState2","slicedToArray","setVisitors","_useState3","_useState4","setGrounds","_useState5","_useState6","setAlerts","_useState7","_useState8","setArticles","_useState9","_useState10","setEvents","_useState11","_useState12","setNews","_useState13","_useState14","setLessons","_useState15","_useState16","setPlaces","_useState17","_useState18","setPeople","_useState19","_useState20","image","setImage","getArticleData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","sent","json","stop","apply","arguments","getVisitorData","_ref3","_callee2","_context2","getAlertData","_ref4","_callee3","_context3","getGroundsData","_ref5","_callee4","_context4","getEventsData","_ref6","_callee5","_context5","getNewsData","_ref7","_callee6","_context6","getLessonsData","_ref8","_callee7","_context7","getPlacesData","_ref9","_callee8","_context8","parseInt","total","listingimage","getPeopleData","_ref10","_callee9","_context9","console","log","useEffect","substring","latVal","parseFloat","longVal","park","head","mapIcon","index_es","color","icon","faMapMarkerAlt","size","locLabel","map_GoogleMapsContainer","parkImage","src","alt","panel_ExpansionPanel","Header","App","parks","setParks","search","setSearch","query","setQuery","getData","components_header_Header","onSubmit","preventDefault","type","placeholder","value","onChange","toSet","park_Park","fullName","directionsUrl","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.18cf9bfc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport style from './panel.module.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction SimpleExpansionPanel({ alerts, desc, visitors, grounds, articles, events, news, lessons, places, people }) {\n  const classes = useStyles();\n\n  var alertsEmpty = alerts.length === 0;\n  var groundsEmpty = grounds.length === 0;\n  var centersEmpty = visitors.length === 0;\n  var articlesEmpty = articles.length === 0;\n  var lotsOfArticles = articles.length > 10;\n  var eventsEmpty = events.length === 0;\n  var newsEmpty = news.length === 0;\n  var lessonsEmpty = lessons.length === 0;\n  var placesEmpty = places.length === 0;\n  var peopleEmpty = people.length === 0;\n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Overview</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <div className={style.infoPanel}>\n              <p align=\"left\">{desc}</p>\n            </div>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>While You're There</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <div className={style.therePanel}>\n              <p align=\"left\"><strong>Visitor Centers:</strong></p>\n              {visitors.map(v => (\n                <p align=\"left\" > <li>{v.description}</li></p>\n            ))}\n              <p align=\"left\">{(centersEmpty ? \"There are no visitor centers :(.\" : \"\")}</p>\n              <hr />\n              <p align=\"left\"><strong>Nearby Campgrounds:</strong></p>\n              {grounds.map(g => (\n                <p><li>{g.description}</li></p>\n              ))}\n              <p align=\"left\">{(groundsEmpty ? \"There are no nearby campgrounds :(.\" : \"\")}</p>\n\n              <hr />\n\n              <p align=\"left\"><strong>Events:</strong></p>\n\n              {events.map(eve => (\n                <p align=\"left\"> <li>{eve.description}</li> </p>\n              ))}\n              <p align=\"left\">{(eventsEmpty ? \"There are no events :(.\" : \"\")}</p>\n            </div>\n\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Things to Know</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <div className={style.infoPanel}>\n              <p align=\"left\"><strong>Alerts:</strong></p>\n              {alerts.map(a => (\n                <p align=\"left\"><li>{a.description}</li></p>\n              ))}\n\n              <p align=\"left\">{(alertsEmpty ? \"There are no alerts!\" : \"\")}</p>\n\n              <hr />\n\n              <p align=\"left\"><strong>Articles: {(lotsOfArticles ? \" (Top 5)\" : \"\")}</strong></p>\n\n              {articles.map(art => (\n                <p align=\"left\"><li><a href={art.url} target=\"_blank\">{art.title}</a></li></p>\n              ))}\n\n              <p align=\"left\">{(articlesEmpty ? \"There are no articles :(.\" : \"\")}</p>\n\n\n              <hr />\n\n              <p align=\"left\"><strong>News:</strong></p>\n\n              {news.map(n => (\n                <p align=\"left\"><li><a href={n.url} target=\"_blank\">{n.title}</a></li></p>))}\n              <p align=\"left\">{(newsEmpty ? \"There is no news :(.\" : \"\")}</p>\n\n\n            </div>\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Educational Information</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n          <div className={style.infoPanel}>\n              <p align=\"left\"><strong>Lesson Plans:</strong></p>\n              {lessons.map(l => (\n                <p align=\"left\"><li>{l.questionobjective}</li></p>\n              ))}\n\n              <p align=\"left\">{(lessonsEmpty ? \"There are no lesson plans. :(\"  : \"\" )}</p>\n\n              <hr />\n\n              <p align=\"left\"><strong>Places:</strong></p>\n              {places.map(place => (\n                <p align=\"left\"><li>{place.listingdescription}</li></p>\n              ))}\n\n              <p align=\"left\">{(placesEmpty ? \"There are no places. :(\"  : \"\" )}</p>\n            \n\n              <hr />\n\n              <p align=\"left\"><strong>Relevant People:</strong></p>\n              {people.map(person => (\n                <p align=\"left\"><li>{person.listingdescription}</li></p>\n              ))}\n\n              <p align=\"left\">{(peopleEmpty ? \"There are no relevant people. :(\"  : \"\" )}</p>\n\n            </div>\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n\n\n    </div>\n  );\n}\n\nexport default SimpleExpansionPanel;","import React from 'react';\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from '../../../node_modules/google-maps-react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { typography } from '@material-ui/core/styles';\nimport style from './map.module.css';\n\n\nconst API = \"AIzaSyB9Kqn59pkizr4_mHqO8D2EsqP1j73i-zI\";\nclass GoogleMapsContainer extends React.Component {\n  constructor(props, lat, long) {\n   \n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      latV: 0,\n      longV: 0\n    }\n  \n    // binding this to event-handler functions\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n  }\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n  onMapClick = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  }\n  render() {\n    const style = {\n      width: '20vw',\n      height: '25vh',\n      'marginLeft': 'auto',\n      'marginTop': '1%',\n      'marginRight': '77%'\n    }\n    return (\n      <Map\n        item\n        xs = { 12 }\n        style = { style }\n        google = { this.props.google }\n        onClick = { this.onMapClick }\n        zoom = { 14 }\n        initialCenter = {{ lat: this.state.latV, lng: this.state.longV }}\n      >\n        <Marker\n          onClick = { this.onMarkerClick }\n          title = { 'Changing Colors Garage' }\n          position = {{ lat: this.state.latV, lng: this.state.longV }}\n          name = { 'Changing Colors Garage' }\n        />\n        <InfoWindow\n          marker = { this.state.activeMarker }\n          visible = { this.state.showingInfoWindow }\n        >\n          <Paper>\n            <Typography\n              variant = 'headline'\n              component = 'h4'\n            >\n              Changing Colors Garage\n            </Typography>\n            <Typography\n              component = 'p'\n            >\n              98G Albe Dr Newark, DE 19702 <br />\n              302-293-8627\n            </Typography>\n          </Paper>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n    api: API\n})(GoogleMapsContainer)","import React, { useEffect, useState } from 'react';\nimport style from './park.module.css';\nimport Panel from '../panel/ExpansionPanel';\nimport GoogleMapsContainer from '../map/GoogleMapsContainer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst API_KEY = 'caMDVw2WGfzDThcGxvCSbIneKuTkM5S8YYIhAQJ7';\n\nconst Park = ({ title, location, parkCode, desc, dir, states, latLong }) => {\n\n    const [visitors, setVisitors] = useState([]);\n    const [grounds, setGrounds] = useState([]);\n    const [alerts, setAlerts] = useState([]);\n    const [articles, setArticles] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [news, setNews] = useState([]);\n    const [lessons, setLessons] = useState([]);\n    const [places, setPlaces] = useState([]);\n    const [people, setPeople] = useState([]);\n    const [image, setImage] = useState('https://media.graytvinc.com/images/810*455/1280x720_80228C00-QKCEF2.jpg');\n\n\n    const getArticleData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/articles?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        const data = await response.json();\n        setArticles(data.data);\n    }\n\n    const getVisitorData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/visitorcenters?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        const data = await response.json();\n        setVisitors(data.data);\n    }\n\n    const getAlertData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/alerts?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        const data = await response.json();\n        setAlerts(data.data);\n    }\n\n    const getGroundsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/campgrounds?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        const data = await response.json();\n        setGrounds(data.data);\n    }\n\n    const getEventsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/events?parkCode=${parkCode}&limit=2&api_key=${API_KEY}`);\n        const data = await response.json();\n        setEvents(data.data);\n    }\n\n    const getNewsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/news?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        const data = await response.json();\n        setNews(data.data);\n    }\n\n    const getLessonsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/lessonplans?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        const data = await response.json();\n        setLessons(data.data);\n    }\n\n    const getPlacesData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/places?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        const data = await response.json();\n        setPlaces(data.data);\n        if (parseInt(data.total, 10) > 0) {\n            setImage(data.data[0].listingimage.url);\n          \n        }\n    }\n\n    const getPeopleData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/people?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        const data = await response.json();\n        setPeople(data.data);\n        console.log(data.data);\n\n    }\n\n    useEffect(() => {\n        getVisitorData();\n        getGroundsData();\n        getAlertData();\n        getArticleData();\n        getEventsData();\n        getNewsData();\n        getLessonsData();\n        getPlacesData();\n        getPeopleData();\n    }, [])\n\n\n    const lat = latLong.substring(4, 14);\n\n    const long = latLong.substring(22, 32);\n\n    var latVal = parseFloat(lat, 10);\n    var longVal = parseFloat(long, 10);\n    return (\n\n        \n        <div className={style.park}>\n            <br />\n\n            <h2 className={style.head}>{title}</h2>\n            <div className={style.mapIcon}>\n                <FontAwesomeIcon\n                    color=\"white\"\n                    icon={faMapMarkerAlt}\n                    size=\"3x\"\n\n                />\n                <div className={style.locLabel}>\n\n                    <p>{states}</p>\n                </div>\n            </div>\n\n\n            <GoogleMapsContainer\n                latV={latVal}\n                longV={longVal}\n            />\n\n            <img className={style.parkImage} src={image} alt=\"Image\" />\n            <br /> <br />\n            {/* <button onClick={(e) => {\n                handleClick(e, parkCode, dir)\n            }}>Directions</button> */}\n            <p></p>\n            <Panel\n                desc={desc}\n                parkCode={parkCode}\n                visitors={visitors}\n                grounds={grounds}\n                alerts={alerts}\n                articles={articles}\n                events={events}\n                news={news}\n                lessons={lessons}\n                places={places}\n                people={people}\n\n            />\n\n\n        </div>\n    );\n}\n\nfunction handleClick(e, parkCode, dir) {\n    e.preventDefault();\n    var win = window.open(`${dir}`, '_blank');\n    win.focus();\n\n}\n\nexport default Park;\n","import React from 'react';\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <div className=\"Header\">\n            <header className=\"App_header\">\n                \n            </header>\n        </div>\n    );\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport Park from './components/park/Park';\nimport './App.css';\nimport Panel from './components/panel/ExpansionPanel';\nimport Header from './components/header/Header'\n\nfunction App() {\n\n  const API_KEY = 'caMDVw2WGfzDThcGxvCSbIneKuTkM5S8YYIhAQJ7';\n  const [parks, setParks] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('NULL');\n  const [visitors, setVisitors] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, [query])\n\n\n  const getData = async () => {\n    const response = await fetch(`https://developer.nps.gov/api/v1/parks?limit=10&q=${query}&api_key=${API_KEY}`);\n    const data = await response.json();\n    setParks(data.data);\n  }\n\n  const updateSearch = e => {\n    const toSet = e.target.value;\n    setSearch(toSet);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n    setParks([]);\n  }\n\n  var pC;\n\n  const getVisitorData = async () => {\n    const response = await fetch(`https://developer.nps.gov/api/v1/visitorcenters?parkCode=${pC}&limit=10&api_key=${API_KEY}`);\n    const data = await response.json();\n    setVisitors(data.data);\n  }\n\n  return (\n\n    <div className=\"App\">\n\n      <Header />\n    <br/><br/><br/><br/><br/>\n      <h1 className=\"titleText\">Welcome to the National Park Service Kiosk </h1>\n\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" placeholder=\"Enter a park name...\" value={search} onChange={updateSearch} />\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n\n      <div className=\"parks\">\n        {parks.map(park => (\n          <Park\n            title={park.fullName}\n            location={park.states}\n            parkCode={park.parkCode}\n            desc={park.description}\n            dir={park.directionsUrl}\n            states={park.states}\n            latLong={park.latLong}\n          />\n\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"park\":\"park_park__3leTU\",\"mapIcon\":\"park_mapIcon__3IMAY\",\"locLabel\":\"park_locLabel__30Dz4\",\"parkImage\":\"park_parkImage__-XLEi\",\"head\":\"park_head__3CS4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"therePanel\":\"panel_therePanel__3mlBZ\"};"],"sourceRoot":""}