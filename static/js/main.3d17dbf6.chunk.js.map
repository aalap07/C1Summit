{"version":3,"sources":["components/panel/ExpansionPanel.js","components/map/GoogleMapsContainer.js","components/error/ErrorBoundary.js","components/park/Park.js","components/header/Header.js","App.js","serviceWorker.js","index.js","components/park/park.module.css","components/symbols/safety-caution-alerts-white-22.svg","components/symbols/calendar-events-white-22.svg","components/symbols/visitor-center-white-22.svg","components/symbols/newspaper-white-22.svg","components/symbols/sign-white-22.svg"],"names":["useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","_ref","alerts","parkId","desc","visitors","grounds","articles","fees","events","news","lessons","places","people","parkCode","classes","alertsEmpty","length","groundsEmpty","centersEmpty","articlesEmpty","lotsOfArticles","eventsEmpty","newsEmpty","lessonsEmpty","placesEmpty","peopleEmpty","feesEmpty","react_default","a","createElement","className","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","Typography","ExpansionPanelDetails","align","map","fee","title","cost","substring","indexOf","v","name","description","g","eve","datestart","dateend","replace","slice","art","href","url","target","n","l","questionobjective","place","listingdescription","person","GoogleMapsContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClick","state","latV","lat","longV","long","bind","assertThisInitialized","_this2","styleDesktop","height","marginLeft","marginTop","marginRight","styleMobile","react_media","query","matches","dist","item","xs","style","google","onClick","zoom","initialCenter","lng","position","React","Component","GoogleApiWrapper","apiKey","ErrorBoundary","hasError","error","info","console","log","children","API_KEY","Park","states","latLong","images","desig","_useState","useState","_useState2","slicedToArray","setVisitors","_useState3","_useState4","setFees","_useState5","_useState6","setGrounds","_useState7","_useState8","setAlerts","_useState9","_useState10","setArticles","_useState11","_useState12","setEvents","_useState13","_useState14","setNews","_useState15","_useState16","setLessons","_useState17","_useState18","setPlaces","_useState19","_useState20","setPeople","_useState21","_useState22","image","getArticleData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","sent","status","window","location","reload","json","stop","apply","arguments","getVisitorData","_ref3","_callee2","_context2","alert","getAlertData","_ref4","_callee3","_context3","getGroundsData","_ref5","_callee4","_context4","getEventsData","_ref6","_callee5","_context5","getNewsData","_ref7","_callee6","_context6","getLessonsData","_ref8","_callee7","_context7","getPlacesData","_ref9","_callee8","_context8","getPeopleData","_ref10","_callee9","_context9","getFeesData","_ref11","_callee10","_context10","entranceFees","getIndex","initial","i","charAt","useEffect","latIndex","longIndex","latVal","parseFloat","longVal","error_ErrorBoundary","park","head","designationLabel","symbols","symbolItem","src","Alert","Event","Visitor","News","Place","mapIcon","index_es","color","icon","faMapMarkerAlt","size","locLabel","map_GoogleMapsContainer","parkImage","alt","panel_ExpansionPanel","Header","App","parks","setParks","search","setSearch","setQuery","type","setType","deg","setDeg","lim","setLim","desigs","setDesigs","require","getData","array","trailerIndex","curr","fullName","toUpperCase","includes","push","designation","onSubmit","preventDefault","trailer","Math","random","FormControl","component","RadioGroup","aria-label","value","onChange","event","row","FormControlLabel","control","Radio","label","labelPlacement","placeholder","toSet","react_select_browser_esm","options","selectedOption","tempDegs","Array","from","Set","JSON","stringify","parse","park_Park","components_header_Header","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3d17dbf6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n//Expansion panel class used to construct the information view of each park\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction SimpleExpansionPanel({ alerts, parkId, desc, visitors, grounds, articles, fees, events, news, lessons, places, people, parkCode }) {\n  const classes = useStyles();\n\n  //Variables used to see if each array is empty\n  var alertsEmpty = alerts.length === 0;\n  var groundsEmpty = grounds.length === 0;\n  var centersEmpty = visitors.length === 0;\n  var articlesEmpty = articles.length === 0;\n  var lotsOfArticles = articles.length > 5;\n  var eventsEmpty = events.length === 0;\n  var newsEmpty = news.length === 0;\n  var lessonsEmpty = lessons.length === 0;\n  var placesEmpty = places.length === 0;\n  var peopleEmpty = people.length === 0;\n  var feesEmpty = fees.length === 0;\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          {/* Code for the overview panel */}\n          <Typography className={classes.heading}>Overview</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <div>\n              {/* Provides information such as description, entrance fees, park data, and park id */}\n              <p align=\"left\"><strong>Description</strong></p>\n              <p align=\"left\">{desc}</p>\n              {feesEmpty ? \"\" : <hr />}\n              <p align=\"left\"><strong>{feesEmpty ? \"\" : \"Entrance Fees\"}</strong></p>\n              {fees.map(fee => (\n                <p align=\"left\" > <li>{fee.title}: ${fee.cost.substring(0, fee.cost.indexOf(\".\") + 3)}</li></p>\n              ))}\n              {feesEmpty ? \"\" : <hr />}\n              <p align=\"left\"><strong>Park Data</strong></p>\n              <p align=\"left\">Park Code: {parkCode}</p>\n              <p align=\"left\">Park ID: {parkId}</p>\n            </div>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          {/* Code for the while you're there panel */}\n          <Typography className={classes.heading}>While You're There</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <div>\n              {/* Provides info on visitor centers, campgrounds, and events at the park */}\n\n              <p align=\"left\"><strong>{centersEmpty ? \"\" : \"Visitor Centers\"}</strong></p>\n              {visitors.map(v => (\n                <p align=\"left\" > <li><strong>{v.name + \": \"}</strong>{v.description}</li></p>\n              ))}\n              {groundsEmpty ? \"\" : <hr />}\n\n\n              <p align=\"left\"><strong>{groundsEmpty ? \"\" : \"Nearby Campgrounds\"}</strong></p>\n              {grounds.map(g => (\n                <p align=\"left\"><li><strong>{g.name + \": \"}</strong>{g.description}</li></p>\n              ))}\n\n              {eventsEmpty ? \"\" : <hr />}\n\n              <p align=\"left\"><strong>{(eventsEmpty ? \"\" : \"Events\")}</strong></p>\n              {events.map(eve => (\n                <p align=\"left\"> <li><strong>{eve.datestart !== eve.dateend ? (eve.datestart + \" to \" + eve.dateend + \": \") : eve.datestart + \": \"}</strong>{eve.description.replace(/(<([^>]+)>)/ig, '')}</li></p>\n              ))}\n\n              {centersEmpty && groundsEmpty && eventsEmpty ? \"There is no information available.\": \"\"}\n            </div>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          {/* Code for the things to know panel */}\n          <Typography className={classes.heading}>Things to Know</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <div>\n              {/* Provides info on alerts, the top 5 articles, and news */}\n              <p align=\"left\"><strong>Alerts:</strong></p>\n              {alerts.map(a => (\n                <p align=\"left\"><li><strong>{a.title + \": \"}</strong>{a.description}</li></p>\n              ))}\n              <p align=\"left\">{(alertsEmpty ? \"There are no alerts!\" : \"\")}</p>\n\n              {articlesEmpty && newsEmpty ? \"\" : <hr />}\n\n\n              <p align=\"left\"><strong>{articlesEmpty ? \"\" : \"Articles:\"} {(lotsOfArticles ? \" (Top 5)\" : \"\")}</strong></p>\n              {articles.slice(0, 5).map(art => (\n                <p align=\"left\"><li><a href={art.url} target=\"_blank\">{art.title}</a></li></p>\n              ))}\n\n              {newsEmpty ? \"\" : <hr />}\n\n              <p align=\"left\"><strong>{(newsEmpty ? \"\" : \"News\")}</strong></p>\n              {news.map(n => (\n                <p align=\"left\"><li><a href={n.url} target=\"_blank\">{n.title}</a></li></p>))\n              }\n            </div>\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          {/* Code for the educational information panel */}\n          <Typography className={classes.heading}>Educational Information</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            <div>\n              {/* Provides lesson plans, places, and relevant people information */}\n              <p align=\"left\"><strong>{(lessonsEmpty ? \"\" : \"Lesson Plans:\")}</strong></p>\n              {lessons.map(l => (\n                <p align=\"left\"><li><strong>{l.title + \": \"}</strong>{l.questionobjective}</li></p>\n              ))}\n\n              {lessonsEmpty ? \"\" : <hr />}\n\n              <p align=\"left\"><strong>{(placesEmpty ? \"\" : \"Places:\")}</strong></p>\n              {places.map(place => (\n                <p align=\"left\"><li>{place.listingdescription}</li></p>\n              ))}\n\n              {peopleEmpty || placesEmpty ? \"\" : <hr />}\n\n\n              <p align=\"left\"><strong>{(peopleEmpty ? \"\" : \"Relevant People:\")}</strong></p>\n              {people.map(person => (\n                <p align=\"left\"><li><strong>{person.title + \": \"}</strong>{person.listingdescription}</li></p>\n              ))}\n\n              <p>{lessonsEmpty && placesEmpty && peopleEmpty ? \"There is no educational information for this park.\" : \"\"}</p>\n            </div>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nexport default SimpleExpansionPanel;","import React from 'react';\nimport Media from 'react-media';\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from 'google-maps-react';\n\n//API key for google maps to be used\nconst API = \"AIzaSyB9Kqn59pkizr4_mHqO8D2EsqP1j73i-zI\";\n\nclass GoogleMapsContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      latV: props.lat,\n      longV: props.long\n    }\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n  }\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n  onMapClick = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  }\n\n  render() {\n\n    {/* Two different map styles based on side of screen */ }\n    const styleDesktop = {\n      width: '20vw',\n      height: '25vh',\n      'marginLeft': 'auto',\n      'marginTop': '1%',\n      'marginRight': '77%',\n    }\n\n    const styleMobile = {\n      width: '60vw',\n      height: '25vh',\n      'marginTop': '60%',\n      'marginLeft': '-30%',\n    }\n\n    return (\n      //Render the map with the appropriate style based on device width \n      <Media query=\"(max-width: 800px)\">\n        {matches =>\n          matches ? (\n            <Map\n              item\n              xs={12}\n              style={styleMobile}\n              google={this.props.google}\n              onClick={this.onMapClick}\n              zoom={10}\n              initialCenter={{ lat: this.state.latV, lng: this.state.longV }}\n            >\n\n              <Marker\n                onClick={this.onMarkerClick}\n                position={{ lat: this.state.latV, lng: this.state.longV }}\n              />\n\n            </Map>\n          ) : (\n              <Map\n                item\n                xs={12}\n                style={styleDesktop}\n                google={this.props.google}\n                onClick={this.onMapClick}\n                zoom={10}\n                initialCenter={{ lat: this.state.latV, lng: this.state.longV }}\n              >\n\n                <Marker\n                  onClick={this.onMarkerClick}\n                  position={{ lat: this.state.latV, lng: this.state.longV }}\n                />\n\n              </Map>\n            )\n        }\n      </Media>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: (API)\n})(GoogleMapsContainer)\n","import React from 'react';\n\n//Class used to catch errors\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    componentDidCatch(error, info) {\n      // Display fallback UI\n      this.setState({ hasError: true });\n      // You can also log the error to an error reporting service\n      console.log(error);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n      }\n      return this.props.children;\n    }\n  }\n\n  export default ErrorBoundary;","import React, { useEffect, useState } from 'react'\nimport style from './park.module.css';\nimport Panel from '../panel/ExpansionPanel';\nimport GoogleMapsContainer from '../map/GoogleMapsContainer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport ErrorBoundary from '../error/ErrorBoundary';\nimport Alert from '../symbols/safety-caution-alerts-white-22.svg';\nimport Event from '../symbols/calendar-events-white-22.svg';\nimport Visitor from '../symbols/visitor-center-white-22.svg';\nimport News from '../symbols/newspaper-white-22.svg';\nimport Place from '../symbols/sign-white-22.svg';\n\n//Sets API key for use throughout the file\nconst API_KEY = 'BQIA5axx9zYGzh0G33NrpBU3knFkhHz7T5Rj14qH';\n\nconst Park = ({ title, parkCode, desc, states, latLong, images, desig, parkId }) => {\n\n    //Sets various state variables using hooks for park properties \n    const [visitors, setVisitors] = useState([]);\n    const [fees, setFees] = useState([]);\n    const [grounds, setGrounds] = useState([]);\n    const [alerts, setAlerts] = useState([]);\n    const [articles, setArticles] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [news, setNews] = useState([]);\n    const [lessons, setLessons] = useState([]);\n    const [places, setPlaces] = useState([]);\n    const [people, setPeople] = useState([]);\n    const [image, setImage] = useState(images.length > 0 ? images[0].url : \"https://www.nps.gov/common/commonspot/templates/images/logos/nps_social_image_02.jpg\");\n\n    //The next section of functions are API calls for the different park properties\n    const getArticleData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/articles?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setArticles(data.data);\n        }\n\n    }\n\n    const getVisitorData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/visitorcenters?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.alert(\"The API request limit has been exceeded. Please contact the developer or try again in 1 hour.\");\n            window.location.reload();\n            \n        }\n        else {\n            const data = await response.json();\n            setVisitors(data.data);\n        }\n\n\n    }\n\n    const getAlertData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/alerts?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n\n        }\n        else {\n            const data = await response.json();\n            setAlerts(data.data);\n        }\n\n\n    }\n\n    const getGroundsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/campgrounds?parkCode=${parkCode}&limit=10&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setGrounds(data.data);\n        }\n\n\n    }\n\n    const getEventsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/events?parkCode=${parkCode}&limit=2&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setEvents(data.data);\n        }\n\n\n    }\n\n    const getNewsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/news?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setNews(data.data);\n        }\n\n\n    }\n\n    const getLessonsData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/lessonplans?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setLessons(data.data);\n        }\n\n\n    }\n\n    const getPlacesData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/places?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setPlaces(data.data);\n        }\n    }\n\n    const getPeopleData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/people?parkCode=${parkCode}&limit=5&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setPeople(data.data);\n        }\n\n    }\n\n    const getFeesData = async () => {\n        const response = await fetch(`https://developer.nps.gov/api/v1/parks?parkCode=${parkCode}&limit=5&start=0&fields=entranceFees&api_key=${API_KEY}`);\n        if (response.status === 429) {\n            window.location.reload();\n        }\n        else {\n            const data = await response.json();\n            setFees(data.data[0].entranceFees);\n        }\n    }\n\n    //We want these functions to run at each render\n    useEffect(() => {\n        getVisitorData();\n        getGroundsData();\n        getAlertData();\n        getArticleData();\n        getEventsData();\n        getNewsData();\n        getLessonsData();\n        getPlacesData();\n        getPeopleData();\n        getFeesData();\n    }, [])\n\n    //Function used to get the index for extracting latitude and longitude data for maps\n    function getIndex(initial) {\n        for (var i = 0; i < initial.length; i++) {\n            if (initial.charAt(i) === \":\") {\n                return i;\n            }\n        }\n        return -1;\n    }\n    //Pulls appropriate substring and parses them into floats for use in google maps api\n    var latIndex = getIndex(latLong);\n    var longIndex = getIndex(latLong.substring(latIndex + 1)) + latIndex + 1;\n    const lat = latLong.substring(latIndex + 1, latIndex + 10);\n    const long = latLong.substring(longIndex + 1, longIndex + 10);\n    var latVal = parseFloat(lat, 10);\n    var longVal = parseFloat(long, 10);\n\n    return (\n        <ErrorBoundary>\n            <div className={style.park}>\n                <br />\n                {/* Displays title, designation, symbols, states, and google map */}\n                <h2 className={style.head}>{title}</h2>\n                {desig !== \"\" ?\n                    <h4 className={style.designationLabel}>Designation: {desig}</h4>\n                    : <div> <br /><br /></div>}\n\n                <div className={style.symbols}>\n                    {alerts.length !== 0 ? <div className={style.symbolItem}>  <img src={Alert} /> </div> : \"\"}\n                    {events.length !== 0 ? <div className={style.symbolItem}>  <img src={Event} /> </div> : \"\"}\n                    {visitors.length !== 0 ? <div className={style.symbolItem}>  <img src={Visitor} /> </div> : \"\"}\n                    {news.length !== 0 ? <div className={style.symbolItem}>  <img src={News} /> </div> : \"\"}\n                    {places.length !== 0 ? <div className={style.symbolItem}>  <img src={Place} /> </div> : \"\"}\n                </div>\n\n                <div className={style.mapIcon}>\n                    <FontAwesomeIcon\n                        color=\"white\"\n                        icon={faMapMarkerAlt}\n                        size=\"3x\"\n                    />\n                    <div className={style.locLabel}>\n                        <p>{states}</p>\n                    </div>\n                </div>\n                {/* If lat and long are provided, make a google maps container, otherwise, show user */}\n                {latLong !== \"\" ? <GoogleMapsContainer\n                    lat={latVal}\n                    long={longVal}\n                /> : <p align=\"right\" style={{ color: 'white' }}> Location coordinates not provided by API. </p>}\n                <img className={style.parkImage} src={image} alt=\"Image\" />\n                <br /> <br />\n                <p></p>\n                {/* Creates expansionpanel and passes in all necessary data */}\n                <Panel\n                    desc={desc}\n                    parkId={parkId}\n                    parkCode={parkCode}\n                    visitors={visitors}\n                    grounds={grounds}\n                    alerts={alerts}\n                    articles={articles}\n                    events={events}\n                    news={news}\n                    lessons={lessons}\n                    places={places}\n                    people={people}\n                    fees={fees}\n                />\n            </div>\n        </ErrorBoundary>\n    );\n}\n\nexport default Park;\n","import React from 'react';\nimport './Header.css';\n\n//Class used to create the header for the page\nconst Header = (props) => {\n    return (\n        <div className=\"Header\"></div>\n    );\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport Park from './components/park/Park';\nimport './App.css';\nimport Header from './components/header/Header'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport ErrorBoundary from './components/error/ErrorBoundary';\n\nfunction App() {\n  //Sets various state variables using hooks for park properties \n  const [parks, setParks] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('NULL');\n  const [type, setType] = useState('key');\n  const [deg, setDeg] = useState(\"Any\");\n  const [lim, setLim] = useState(2);\n  const [desigs, setDesigs] = useState([]);\n\n  /*\n  All park data has been taken and stored as a local json for efficiency. In an event\n  where new park data is added, this data can also be pulled with an API call.\n  */\n  const data = require('../src/parks');\n\n  //Array of states and territories to use for drop down\n  const states = [\n    { label: \"Alabama\", value: \"AL\" },\n    { label: \"Alaska\", value: \"AK\" },\n    { label: \"American Samoa\", value: \"AS\" },\n    { label: \"Arizona\", value: \"AZ\" },\n    { label: \"Arkansas\", value: \"AR\" },\n    { label: \"California\", value: \"CA\" },\n    { label: \"Colorado\", value: \"CO\" },\n    { label: \"Connecticut\", value: \"CT\" },\n    { label: \"Delaware\", value: \"DE\" },\n    { label: \"District of Columbia\", value: \"DC\" },\n    { label: \"Florida\", value: \"FL\" },\n    { label: \"Georgia\", value: \"GA\" },\n    { label: \"Guam\", value: \"GU\" },\n    { label: \"Hawaii\", value: \"HI\" },\n    { label: \"Idaho\", value: \"ID\" },\n    { label: \"Illinois\", value: \"IL\" },\n    { label: \"Indiana\", value: \"IN\" },\n    { label: \"Iowa\", value: \"IA\" },\n    { label: \"Kansas\", value: \"KS\" },\n    { label: \"Kentucky\", value: \"KY\" },\n    { label: \"Louisiana\", value: \"LA\" },\n    { label: \"Maine\", value: \"ME\" },\n    { label: \"Maryland\", value: \"MD\" },\n    { label: \"Massachusetts\", value: \"MA\" },\n    { label: \"Michigan\", value: \"MI\" },\n    { label: \"Minnesota\", value: \"MN\" },\n    { label: \"Mississippi\", value: \"MS\" },\n    { label: \"Missouri\", value: \"MO\" },\n    { label: \"Montana\", value: \"MT\" },\n    { label: \"Nebraska\", value: \"NE\" },\n    { label: \"Nevada\", value: \"NV\" },\n    { label: \"New Hampshire\", value: \"NH\" },\n    { label: \"New Jersey\", value: \"NJ\" },\n    { label: \"New Mexico\", value: \"NM\" },\n    { label: \"New York\", value: \"NY\" },\n    { label: \"North Carolina\", value: \"NC\" },\n    { label: \"North Dakota\", value: \"ND\" },\n    { label: \"Northern Mariana Islands\", value: \"MP\" },\n    { label: \"Ohio\", value: \"OH\" },\n    { label: \"Oklahoma\", value: \"OK\" },\n    { label: \"Oregon\", value: \"OR\" },\n    { label: \"Pennsylvania\", value: \"PA\" },\n    { label: \"Puerto Rico\", value: \"PR\" },\n    { label: \"Rhode Island\", value: \"RI\" },\n    { label: \"South Carolina\", value: \"SC\" },\n    { label: \"South Dakota\", value: \"SD\" },\n    { label: \"Tennessee\", value: \"TN\" },\n    { label: \"Texas\", value: \"TX\" },\n    { label: \"Utah\", value: \"UT\" },\n    { label: \"Vermont\", value: \"VT\" },\n    { label: \"Virgin Islands\", value: \"VI\" },\n    { label: \"Virginia\", value: \"VA\" },\n    { label: \"Washington\", value: \"WA\" },\n    { label: \"West Virginia\", value: \"WV\" },\n    { label: \"Wisconsin\", value: \"WI\" },\n    { label: \"Wyoming\", value: \"WY\" },\n  ];\n\n  //Upon every render, we want to get the data with respect to query\n  useEffect(() => {\n    getData();\n  }, [query])\n\n  var count = -1;\n\n  //Method used to get matches\n  const getData = async () => {\n    setParks([]); //Sets parks to empty array to clear all entries\n    var array = []; //Temp array\n    var trailerIndex = query.indexOf(\"&Q=\"); //Index of appended string used as unique identifier\n    if (trailerIndex >= 3) { //If index is greater than or equal to 3, we know it was a name search\n      data.map(curr => ( //Adds all matches to temp array\n        curr.fullName.toUpperCase().includes(query.substring(0, trailerIndex).toUpperCase()) ? array.push(curr) : array = array\n      ))\n    }\n    else if (trailerIndex === 2) { //If the index is two, we know it was a state search\n      if (deg === \"Any\") { //Add all matches with the state if designation is any\n        data.map(curr => (\n          curr.states.toUpperCase().includes(query.substring(0, 2).toUpperCase()) ? array.push(curr) : array = array\n        ))\n      }\n      else { //Otherwise, we want to add all matches with that state and designation\n        data.map(curr => (\n          curr.states.toUpperCase().includes(query.substring(0, 2).toUpperCase()) && curr.designation === (deg) ? array.push(curr) : array = array\n        ))\n      }\n    }\n    count = array.length;\n    if (count == 0 && query !== \"NULL\") { //If the array has no matches and the query is not the initial one\n      if (trailerIndex !== 2) { //We want to tell the user there have been no matches and reset the search\n        window.alert(\"There are no results for \" + query.substring(0, query.indexOf(\"&Q=\")) + \".\");\n        setSearch('');\n      }\n      else {\n        window.alert(\"There are no results for \" + query.substring(0, query.indexOf(\"&Q=\")) + \" with designation \" + deg + \".\");\n      }\n    }\n    else {\n      setParks(array); //Otherwise, we set parks to the temp array with the matches\n    }\n  }\n\n  //Method used to handle a change in the states dropdown\n  const stateChange = selectedOption => {\n    setSearch(selectedOption.value);\n    var tempDegs = [];\n    data.map(curr => (\n      (curr.designation !== \"\" && curr.states.includes(selectedOption.value)) ? tempDegs.push({ label: curr.designation, value: curr.designation }\n      ) : tempDegs = tempDegs\n    ))\n    tempDegs = Array.from(new Set(tempDegs.map(JSON.stringify)), JSON.parse)\n    console.log(tempDegs);\n    if(tempDegs.length === 0){\n      tempDegs.push({ label: \"Any\", value: \"Any\" });\n    }\n      setDesigs(tempDegs);\n  };\n\n\n  //Method used to handle a change in the designation dropdown\n  const degChange = selectedOption => {\n    setDeg(selectedOption.value);\n  };\n\n  //Method used to set the search to the value in the search box upon hitting search\n  const updateSearch = e => {\n    const toSet = e.target.value;\n    setSearch(toSet);\n  }\n\n  //Method used to process the user search\n  const getSearch = e => {\n    setParks([]);\n    setLim(2);\n    e.preventDefault();\n    if (search.length < 3 && type === \"key\") {\n      if (search.length === 0) { //User has entered nothing. Alert them\n        window.alert(\"Please enter a valid search.\");\n      }\n      else { //User search has not entered enough characters\n        window.alert(\"Your search must be at least 3 characters.\");\n      }\n      setSearch(\"\"); //Reset search to make them try again \n    }\n    else {\n      if (search.length < 2) {\n        window.alert(\"Please enter a state.\");\n        setSearch(\"\");\n      }\n      else {\n        //Otherwise, we can append a unique value to the search and set it to query\n        //The trailer is used to make sure that two consecutive queries are never identical\n        //This ensures that the page does refresh every time\n        var trailer = \"&Q=\" + Math.random() * 10 + 1;\n        setQuery(search + trailer);\n        setParks([]);\n      }\n    }\n  }\n\n  //Method used to handle a change in the search type. Resets search and deg and changes type appropriately\n  function handleRadioChange(event) {\n    setSearch(\"\");\n    setDeg(\"Any\");\n    setType(event.target.value);\n  }\n\n  //Method called when show more button is clicked. Increments limit by 2\n  function getMore() {\n    setLim(lim + 2);\n  }\n\n  return (\n    <div className=\"App\">\n      <br /><br /><br /><br /><br />\n      <h1 className=\"titleText\">Welcome to the National Park Service Kiosk </h1>\n\n      <form onSubmit={getSearch} className=\"search-form\">\n        {/* Radio button form for search type */}\n        <FormControl component=\"fieldset\">\n          <RadioGroup aria-label=\"position\" name=\"position\" value={type} onChange={handleRadioChange} row>\n            <FormControlLabel\n              value=\"key\"\n              className=\"radios\"\n              control={<Radio color=\"primary\" />}\n              label=\"Name\"\n              labelPlacement=\"top\"\n            />\n            <FormControlLabel\n              value=\"states\"\n              className=\"radios\"\n              control={<Radio color=\"primary\" />}\n              label=\"State/Designation\"\n              labelPlacement=\"top\"\n            />\n          </RadioGroup>\n        </FormControl>\n\n        {/* Chooses what to render based on user choice from radio button */}\n        {type === \"key\" ? <input className=\"search-bar\" type=\"text\" placeholder=\"Enter a park name (3+ characters)\" value={search} onChange={updateSearch} />\n          : <Select\n            className=\"state-selector\"\n            placeholder=\"State\"\n            options={states}\n            onChange={stateChange}\n          />}\n        {type !== \"key\" ? <Select\n          className=\"state-selector\"\n          placeholder=\"Designation (Default is any)\"\n          options={desigs}\n          onChange={degChange}\n        /> : \"\"}\n\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      {/* Text that shows user what they searched for */}\n      {query !== 'NULL' && query !== '' ? <p>Showing results for {query.substring(0, query.indexOf(\"&Q=\"))}</p> : \"\"}\n\n\n      {/* Goes through the parks from 0 to lim and creates a park object for them, causing them to render */}\n      <ErrorBoundary>\n        <div className=\"parks\">\n          {parks.slice(0, lim).map(park => (\n            <Park\n              title={park.fullName}\n              parkId={park.id}\n              parkCode={park.parkCode}\n              desc={park.description}\n              states={park.states}\n              images={park.images}\n              latLong={park.latLong}\n              desig={park.designation}\n            />\n          ))}\n        </div>\n        <Header />\n\n      </ErrorBoundary>\n      {/* If there are more parks not being shown, show the show more button */}\n      {parks.length > lim ? <button className=\"more-button\" onClick={getMore}>Show more ({parks.length - lim} left)</button> : \"\"}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parkImage\":\"park_parkImage__-XLEi\",\"locLabel\":\"park_locLabel__30Dz4\",\"mapIcon\":\"park_mapIcon__3IMAY\",\"park\":\"park_park__3leTU\",\"symbols\":\"park_symbols__34IgL\",\"symbolItem\":\"park_symbolItem__706MN\",\"head\":\"park_head__3CS4m\",\"designationLabel\":\"park_designationLabel__3vf-z\"};","module.exports = __webpack_public_path__ + \"static/media/safety-caution-alerts-white-22.ddc656aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar-events-white-22.c20db037.svg\";","module.exports = __webpack_public_path__ + \"static/media/visitor-center-white-22.416f3401.svg\";","module.exports = __webpack_public_path__ + \"static/media/newspaper-white-22.870c809e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-white-22.ae2dcd64.svg\";"],"sourceRoot":""}